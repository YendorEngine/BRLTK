# modified from: https://github.com/bevyengine/bevy/blob/main/.github/workflows/ci.yml
name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_TOOLCHAIN: nightly

jobs:
  check-lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Cache Cargo build files
        uses: Leafwing-Studios/cargo-cache@v1.0.0

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: CI job
        # See tools/ci/src/main.rs for the commands this runs
        run: cargo run -p ci -- lints

  check-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Cargo build files
        uses: Leafwing-Studios/cargo-cache@v1.0.0

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev

      - name: Build & run tests
        # See tools/ci/src/main.rs for the commands this runs
        run: cargo run -p ci -- test
        env:
          RUSTFLAGS: "-C debuginfo=0 -D warnings"

  check-compiles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Cargo build files
        uses: Leafwing-Studios/cargo-cache@v1.0.0

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev

      - name: Check Compile
        # See tools/ci/src/main.rs for the commands this runs
        run: cargo run -p ci -- compile

  check-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cache Cargo build files
        uses: Leafwing-Studios/cargo-cache@v1.0.0

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
        if: runner.os == 'linux'

      - name: Build and check doc
        # See tools/ci/src/main.rs for the commands this runs
        run: cargo run -p ci -- doc
        env:
          RUSTFLAGS: "-C debuginfo=0"
  #      - name: Installs cargo-deadlinks
  #        run: cargo install --force cargo-deadlinks
  #      - name: Checks dead links
  #        run: cargo deadlinks

  build-wasm:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-assets-cargo-build-wasm-stable-${{ hashFiles('**/Cargo.toml') }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown

      - name: Check wasm
        run: cargo check --target wasm32-unknown-unknown

  check-missing-examples-in-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3

      - name: check for missing metadata
        id: missing-metadata
        run: cargo run -p build-example-pages -- check-missing

      - name: check for missing update
        id: missing-update
        run: cargo run -p build-example-pages -- update

      - name: Check for modified files
        run: |
          echo "if this step fails, run the following command and commit the changed file on your PR."
          echo " > cargo run -p build-example-pages -- update"
          git diff --quiet HEAD --

      - name: Save PR number
        if: ${{ failure() && github.event_name == 'pull_request' }}
        run: |
          mkdir -p ./missing-examples
          echo ${{ github.event.number }} > ./missing-examples/NR

      - name: log failed task - missing metadata
        if: ${{ failure() && github.event_name == 'pull_request' && steps.missing-metadata.conclusion == 'failure' }}
        run: touch ./missing-examples/missing-metadata

      - name: log failed task - missing update
        if: ${{ failure() && github.event_name == 'pull_request' && steps.missing-update.conclusion == 'failure' }}
        run: touch ./missing-examples/missing-update

      - uses: actions/upload-artifact@v2
        if: ${{ failure() && github.event_name == 'pull_request' }}
        with:
          name: missing-examples
          path: missing-examples/

  msrv:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-msrv-${{ hashFiles('**/Cargo.toml') }}

      - name: get MSRV
        run: |
          msrv=`cargo metadata --no-deps --format-version 1 | jq --raw-output '.packages[] | select(.name=="bevy") | .rust_version'`
          echo "MSRV=$msrv" >> $GITHUB_ENV

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.MSRV }}

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev

      - name: Run cargo check
        id: check
        run: cargo check

      - name: Save PR number
        if: ${{ failure() && github.event_name == 'pull_request' && steps.check.conclusion == 'failure' }}
        run: |
          mkdir -p ./msrv
          echo ${{ github.event.number }} > ./msrv/NR

      - uses: actions/upload-artifact@v2
        if: ${{ failure() && github.event_name == 'pull_request' && steps.check.conclusion == 'failure' }}
        with:
          name: msrv
          path: msrv/
